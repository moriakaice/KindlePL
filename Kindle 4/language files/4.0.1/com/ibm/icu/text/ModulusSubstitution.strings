divisor
D
ruleToUse
Lcom/ibm/icu/text/NFRule;
<init>
(IDLcom/ibm/icu/text/NFRule;Lcom/ibm/icu/text/NFRuleSet;Lcom/ibm/icu/text/RuleBasedNumberFormat;Ljava/lang/String;)V
Code
LineNumberTable
LocalVariableTable
this
Lcom/ibm/icu/text/ModulusSubstitution;
pos
I
rulePredecessor
ruleSet
Lcom/ibm/icu/text/NFRuleSet;
formatter
Lcom/ibm/icu/text/RuleBasedNumberFormat;
description
Ljava/lang/String;
setDivisor
(II)V
radix
exponent
equals
(Ljava/lang/Object;)Z
that2
that
Ljava/lang/Object;
doSubstitution
(JLjava/lang/StringBuffer;I)V
numberToFormat
J
number
toInsertInto
Ljava/lang/StringBuffer;
position
(DLjava/lang/StringBuffer;I)V
transformNumber
(J)J
(D)D
doParse
(Ljava/lang/String;Ljava/text/ParsePosition;DDZ)Ljava/lang/Number;
result
tempResult
Ljava/lang/Number;
text
parsePosition
Ljava/text/ParsePosition;
baseValue
upperBound
lenientParse
Z
composeRuleValue
(DD)D
newRuleValue
oldRuleValue
calcUpperBound
oldUpperBound
isModulusSubstitution
()Z
tokenChar
()C
SourceFile
NFSubstitution.java
java/lang/IllegalStateException
java/lang/StringBuffer
Substitution with bad divisor (
) 
 | 
>>>
Substitution with bad divisor
com/ibm/icu/text/ModulusSubstitution
java/lang/Long
java/lang/Double
com/ibm/icu/text/NFSubstitution
(ILcom/ibm/icu/text/NFRuleSet;Lcom/ibm/icu/text/RuleBasedNumberFormat;Ljava/lang/String;)V
()V
append
(Ljava/lang/String;)Ljava/lang/StringBuffer;
(D)Ljava/lang/StringBuffer;
java/lang/String
substring
(II)Ljava/lang/String;
(I)Ljava/lang/String;
toString
()Ljava/lang/String;
(Ljava/lang/String;)V
java/lang/Math
pow
com/ibm/icu/text/NFRule
doFormat
floor
(Ljava/lang/String;Ljava/text/ParsePosition;ZD)Ljava/lang/Number;
java/text/ParsePosition
getIndex
()I
java/lang/Number
doubleValue
()D
(J)V
(D)V
