EmptyIterator
InnerClasses
Node
LifoWaitQueue
FifoWaitQueue
WaitQueue
serialVersionUID
J
ConstantValue
qlock
Ledu/emory/mathcs/backport/java/util/concurrent/locks/ReentrantLock;
waitingProducers
Ledu/emory/mathcs/backport/java/util/concurrent/SynchronousQueue$WaitQueue;
waitingConsumers
<init>
()V
Code
LineNumberTable
LocalVariableTable
Ledu/emory/mathcs/backport/java/util/concurrent/SynchronousQueue;
(Z)V
Z
(Ledu/emory/mathcs/backport/java/util/concurrent/SynchronousQueue$Node;)V
Ledu/emory/mathcs/backport/java/util/concurrent/SynchronousQueue$Node;
put
(Ljava/lang/Object;)V
Ljava/lang/InterruptedException;
Ljava/lang/Object;
Exceptions
offer
(Ljava/lang/Object;JLedu/emory/mathcs/backport/java/util/concurrent/TimeUnit;)Z
Ledu/emory/mathcs/backport/java/util/concurrent/TimeUnit;
take
()Ljava/lang/Object;
poll
(JLedu/emory/mathcs/backport/java/util/concurrent/TimeUnit;)Ljava/lang/Object;
(Ljava/lang/Object;)Z
isEmpty
()Z
size
()I
remainingCapacity
clear
contains
remove
containsAll
(Ljava/util/Collection;)Z
Ljava/util/Collection;
removeAll
retainAll
peek
iterator
()Ljava/util/Iterator;
toArray
()[Ljava/lang/Object;
([Ljava/lang/Object;)[Ljava/lang/Object;
a
[Ljava/lang/Object;
drainTo
(Ljava/util/Collection;)I
I
(Ljava/util/Collection;I)I
SourceFile
edu/emory/mathcs/backport/java/util/concurrent/locks/ReentrantLock
edu/emory/mathcs/backport/java/util/concurrent/SynchronousQueue$FifoWaitQueue
edu/emory/mathcs/backport/java/util/concurrent/SynchronousQueue$LifoWaitQueue
java/lang/NullPointerException
java/lang/InterruptedException
edu/emory/mathcs/backport/java/util/concurrent/SynchronousQueue$EmptyIterator
java/lang/Object
java/lang/IllegalArgumentException
edu/emory/mathcs/backport/java/util/concurrent/SynchronousQueue
edu/emory/mathcs/backport/java/util/AbstractQueue
edu/emory/mathcs/backport/java/util/concurrent/BlockingQueue
java/io/Serializable
edu/emory/mathcs/backport/java/util/concurrent/SynchronousQueue$Node
edu/emory/mathcs/backport/java/util/concurrent/SynchronousQueue$WaitQueue
(Ledu/emory/mathcs/backport/java/util/concurrent/SynchronousQueue$Node;)Z
lock
unlock
java/lang/Thread
interrupted
()Ledu/emory/mathcs/backport/java/util/concurrent/SynchronousQueue$Node;
(Ljava/lang/Object;)Ledu/emory/mathcs/backport/java/util/concurrent/SynchronousQueue$Node;
edu/emory/mathcs/backport/java/util/concurrent/TimeUnit
toNanos
(J)J
(J)Z
(J)Ljava/lang/Object;
java/util/Collection
add
BX
NV
vy
EW
KW
aw
WX
mv
pv
qX
Ix
AW
FW
