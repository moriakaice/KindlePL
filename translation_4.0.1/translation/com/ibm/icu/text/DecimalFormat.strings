epsilon
D
STATUS_INFINITE
I
ConstantValue
STATUS_POSITIVE
STATUS_UNDERFLOW
STATUS_LENGTH
dotEquivalents
Lcom/ibm/icu/text/UnicodeSet;
commaEquivalents
otherGroupingSeparators
strictDotEquivalents
strictCommaEquivalents
strictOtherGroupingSeparators
defaultGroupingSeparators
strictDefaultGroupingSeparators
PARSE_MAX_EXPONENT
roundingIncrementEpsilon
digitList
Lcom/ibm/icu/text/DigitList;
positivePrefix
Ljava/lang/String;
positiveSuffix
negativePrefix
negativeSuffix
posPrefixPattern
posSuffixPattern
negPrefixPattern
negSuffixPattern
currencyChoice
Ljava/text/ChoiceFormat;
multiplier
groupingSize
B
groupingSize2
decimalSeparatorAlwaysShown
Z
isCurrencyFormat
symbols
Lcom/ibm/icu/text/DecimalFormatSymbols;
useSignificantDigits
minSignificantDigits
maxSignificantDigits
useExponentialNotation
minExponentDigits
exponentSignAlwaysShown
roundingIncrement
Ljava/math/BigDecimal;
roundingIncrementICU
Lcom/ibm/icu/math/BigDecimal;
roundingDouble
roundingDoubleReciprocal
roundingMode
formatWidth
pad
C
padPosition
parseBigDecimal
currentSerialVersion
serialVersionOnStream
PAD_BEFORE_PREFIX
PAD_AFTER_PREFIX
PAD_BEFORE_SUFFIX
PAD_AFTER_SUFFIX
PATTERN_ZERO_DIGIT
PATTERN_GROUPING_SEPARATOR
PATTERN_DECIMAL_SEPARATOR
PATTERN_DIGIT
PATTERN_SIGNIFICANT_DIGIT
PATTERN_EXPONENT
PATTERN_PLUS_SIGN
PATTERN_PER_MILLE
PATTERN_PERCENT
PATTERN_PAD_ESCAPE
PATTERN_MINUS
PATTERN_SEPARATOR
CURRENCY_SIGN
QUOTE
DOUBLE_INTEGER_DIGITS
DOUBLE_FRACTION_DIGITS
MAX_SCIENTIFIC_INTEGER_DIGITS
serialVersionUID
J
<init>
()V
Code
LineNumberTable
LocalVariableTable
this
Lcom/ibm/icu/text/DecimalFormat;
def
Lcom/ibm/icu/util/ULocale;
pattern
(Ljava/lang/String;)V
(Ljava/lang/String;Lcom/ibm/icu/text/DecimalFormatSymbols;)V
format
(DLjava/lang/StringBuffer;Ljava/text/FieldPosition;)Ljava/lang/StringBuffer;
number
result
Ljava/lang/StringBuffer;
fieldPosition
Ljava/text/FieldPosition;
(DLjava/lang/StringBuffer;Ljava/text/FieldPosition;Z)Ljava/lang/StringBuffer;
newNumber
prefixLen
suffixLen
parseAttr
isNegative
round
(DDDIZ)D
testFloor
ceil
ceildiff
floor
floordiff
roundingInc
roundingIncReciprocal
mode
div
(JLjava/lang/StringBuffer;Ljava/text/FieldPosition;)Ljava/lang/StringBuffer;
(JLjava/lang/StringBuffer;Ljava/text/FieldPosition;Z)Ljava/lang/StringBuffer;
cutoff
tooBig
(Ljava/math/BigInteger;Ljava/lang/StringBuffer;Ljava/text/FieldPosition;)Ljava/lang/StringBuffer;
Ljava/math/BigInteger;
(Ljava/math/BigInteger;Ljava/lang/StringBuffer;Ljava/text/FieldPosition;Z)Ljava/lang/StringBuffer;
(Ljava/math/BigDecimal;Ljava/lang/StringBuffer;Ljava/text/FieldPosition;)Ljava/lang/StringBuffer;
(Ljava/math/BigDecimal;Ljava/lang/StringBuffer;Ljava/text/FieldPosition;Z)Ljava/lang/StringBuffer;
(Lcom/ibm/icu/math/BigDecimal;Ljava/lang/StringBuffer;Ljava/text/FieldPosition;)Ljava/lang/StringBuffer;
isGroupingPosition
(I)Z
pos
precision
(Z)I
isIntegral
subformat
(Ljava/lang/StringBuffer;Ljava/text/FieldPosition;ZZ)Ljava/lang/StringBuffer;
isInteger
(Ljava/lang/StringBuffer;Ljava/text/FieldPosition;ZZZ)Ljava/lang/StringBuffer;
expDig
minFracDig
exponent
minimumDigits
integerDigits
totalDigits
negativeExponent
i
d
sigCount
minSigDig
maxSigDig
count
digitIndex
sizeBeforeIntegerPart
fractionPresent
zero
zeroDelta
grouping
decimal
useSigDig
maxIntDig
minIntDig
addPadding
(Ljava/lang/StringBuffer;Ljava/text/FieldPosition;II)V
padding
[C
len
parse
(Ljava/lang/String;Ljava/text/ParsePosition;)Ljava/lang/Number;
text
parsePosition
Ljava/text/ParsePosition;
parseCurrency
(Ljava/lang/String;Ljava/text/ParsePosition;)Lcom/ibm/icu/util/CurrencyAmount;
Deprecated
(Ljava/lang/String;Ljava/text/ParsePosition;Z)Ljava/lang/Object;
nx
l
big
mult
backup
status
[Z
currency
[Lcom/ibm/icu/util/Currency;
n
Ljava/lang/Number;
subparse
(Ljava/lang/String;Ljava/text/ParsePosition;Lcom/ibm/icu/text/DigitList;Z[Z[Lcom/ibm/icu/util/Currency;)Z
negExp
exponentDigits
ch
exponentSep
sawDecimal
sawExponent
sawDigit
digit
strictParse
strictFail
leadingZero
lastGroup
gs2
decimalSet
groupingSet
digitCount
digits
isExponent
position
oldStart
posMatch
negMatch
getSimilarDecimals
(CZ)Lcom/ibm/icu/text/UnicodeSet;
skipPadding
(Ljava/lang/String;I)I
compareAffix
(Ljava/lang/String;IZZ[Lcom/ibm/icu/util/Currency;)I
isPrefix
compareSimpleAffix
(Ljava/lang/String;Ljava/lang/String;I)I
literalMatch
s
c
affix
input
start
skipRuleWhiteSpace
skipUWhiteSpace
compareComplexAffix
(Ljava/lang/String;Ljava/lang/String;I[Lcom/ibm/icu/util/Currency;)I
j
uloc
ppos
iso
intl
affixPat
match
(Ljava/lang/String;II)I
(Ljava/lang/String;ILjava/lang/String;)I
str
getDecimalFormatSymbols
()Lcom/ibm/icu/text/DecimalFormatSymbols;
foo
Ljava/lang/Exception;
setDecimalFormatSymbols
(Lcom/ibm/icu/text/DecimalFormatSymbols;)V
newSymbols
setCurrencyForSymbols
getPositivePrefix
()Ljava/lang/String;
setPositivePrefix
newValue
getNegativePrefix
setNegativePrefix
getPositiveSuffix
setPositiveSuffix
getNegativeSuffix
setNegativeSuffix
getMultiplier
()I
setMultiplier
(I)V
getRoundingIncrement
()Ljava/math/BigDecimal;
setRoundingIncrement
(Ljava/math/BigDecimal;)V
(Lcom/ibm/icu/math/BigDecimal;)V
(D)V
rawRoundedReciprocal
setRoundingDoubleReciprocal
getRoundingMode
setRoundingMode
getFormatWidth
setFormatWidth
width
getPadCharacter
()C
setPadCharacter
(C)V
padChar
getPadPosition
setPadPosition
padPos
isScientificNotation
()Z
setScientificNotation
(Z)V
useScientific
getMinimumExponentDigits
()B
setMinimumExponentDigits
(B)V
minExpDig
isExponentSignAlwaysShown
setExponentSignAlwaysShown
expSignAlways
getGroupingSize
setGroupingSize
getSecondaryGroupingSize
setSecondaryGroupingSize
isDecimalSeparatorAlwaysShown
setDecimalSeparatorAlwaysShown
clone
()Ljava/lang/Object;
other
e
equals
(Ljava/lang/Object;)Z
obj
Ljava/lang/Object;
(Ljava/lang/String;Ljava/lang/String;)Z
pat1
pat2
unquote
(Ljava/lang/String;)Ljava/lang/String;
pat
buf
hashCode
toPattern
toLocalizedPattern
expandAffixes
buffer
expandAffix
(Ljava/lang/String;Ljava/lang/StringBuffer;Z)V
isChoiceFormat
Lcom/ibm/icu/util/Currency;
doFormat
appendAffix
(Ljava/lang/StringBuffer;ZZZ)I
affixBuf
appendAffixPattern
(Ljava/lang/StringBuffer;ZZZ)V
localized
(Z)Ljava/lang/String;
add
sub0Start
g
maxDig
minDig
part
sigDigit
group
roundingDecimalPos
roundingDigits
padSpec
applyPattern
applyLocalizedPattern
(Ljava/lang/String;Z)V
p
after
doubled
minInt
scale
digitTotalCount
effectiveDecimalPos
subpart
sub0Limit
sub2Limit
prefix
suffix
decimalPos
multpl
digitLeftCount
zeroDigitCount
digitRightCount
sigDigitCount
groupingCount
groupingCount2
incrementPos
incrementVal
expDigits
isCurrency
zeroDigit
groupingSeparator
decimalSeparator
percent
perMill
separator
plus
padEscape
minus
nineDigit
gotNegative
setRoundingDouble
patternError
(Ljava/lang/String;Ljava/lang/String;)V
msg
setMaximumIntegerDigits
setMinimumIntegerDigits
getMinimumSignificantDigits
getMaximumSignificantDigits
setMinimumSignificantDigits
min
max
setMaximumSignificantDigits
areSignificantDigitsUsed
setSignificantDigitsUsed
setCurrency
(Lcom/ibm/icu/util/Currency;)V
theCurrency
getEffectiveCurrency
()Lcom/ibm/icu/util/Currency;
setMaximumFractionDigits
setMinimumFractionDigits
setParseBigDecimal
value
isParseBigDecimal
writeObject
(Ljava/io/ObjectOutputStream;)V
stream
Ljava/io/ObjectOutputStream;
Exceptions
readObject
(Ljava/io/ObjectInputStream;)V
Ljava/io/ObjectInputStream;
setInternalRoundingIncrement
<clinit>
SourceFile
DecimalFormat.java
com/ibm/icu/text/DigitList

-
com/ibm/icu/text/DecimalFormatSymbols
java/lang/ArithmeticException
Rounding necessary
java/lang/IllegalArgumentException
java/lang/StringBuffer
Invalid rounding mode: 
com/ibm/icu/math/BigDecimal
java/lang/Number
com/ibm/icu/util/CurrencyAmount
java/lang/Double
com/ibm/icu/util/Currency
0.0
-0.0
java/lang/Long
com/ibm/icu/text/UnicodeSet
java/lang/RuntimeException
java/text/ParsePosition
java/lang/Exception
Bad multiplier: 
Illegal rounding increment
Illegal format width
Illegal pad position
Exponent digits must be >= 1
com/ibm/icu/text/DecimalFormat
java/lang/IllegalStateException
java/text/ChoiceFormat
java/text/FieldPosition
Malformed affix pattern: 
Unexpected '
Grouping separator after decimal
Multiple decimal separators
Multiple exponential symbols
Grouping separator in exponential
Malformed exponential
Unquoted special character '
Too many percent/permille characters
Multiple pad specifiers
Invalid pad specifier
Unterminated quote
Malformed pattern
 in pattern "
[.․。︒﹒．｡]
[,،٫、︐︑﹐﹑，､]
[\ ' ٬ - ‘’  　＇]
[.․﹒．｡]
[,٫︐﹐，]
com/ibm/icu/text/NumberFormat
java/io/IOException
java/lang/ClassNotFoundException
com/ibm/icu/util/ULocale
getDefault
()Lcom/ibm/icu/util/ULocale;
getPattern
(Lcom/ibm/icu/util/ULocale;I)Ljava/lang/String;
(Lcom/ibm/icu/util/ULocale;)V
getInstance
(Lcom/ibm/icu/util/ULocale;)Lcom/ibm/icu/util/Currency;
setBeginIndex
setEndIndex
isNaN
(D)Z
getField
length
getNaN
append
(Ljava/lang/String;)Ljava/lang/StringBuffer;
isInfinite
getInfinity
set
(DIZ)V
java/lang/Math
(D)D
(I)Ljava/lang/StringBuffer;
toString
valueOf
(J)Lcom/ibm/icu/math/BigDecimal;
java/math/BigInteger
(J)Ljava/math/BigInteger;
(JI)V
(Ljava/math/BigInteger;)V
multiply
(Ljava/math/BigInteger;)Ljava/math/BigInteger;
(Ljava/math/BigInteger;I)V
signum
java/math/BigDecimal
(J)Ljava/math/BigDecimal;
(Ljava/math/BigDecimal;)Ljava/math/BigDecimal;
divide
(Ljava/math/BigDecimal;II)Ljava/math/BigDecimal;
(Ljava/math/BigDecimal;IZ)V
(Lcom/ibm/icu/math/BigDecimal;)Lcom/ibm/icu/math/BigDecimal;
(Lcom/ibm/icu/math/BigDecimal;II)Lcom/ibm/icu/math/BigDecimal;
(Lcom/ibm/icu/math/BigDecimal;IZ)V
isGroupingUsed
getMinimumIntegerDigits
getMaximumFractionDigits
getZeroDigit
getMonetaryGroupingSeparator
getGroupingSeparator
getMonetaryDecimalSeparator
getDecimalSeparator
getMaximumIntegerDigits
isZero
decimalAt
getMinimumFractionDigits
(C)Ljava/lang/StringBuffer;
[B
getEndIndex
getBeginIndex
getExponentSeparator
getMinusSign
getPlusSign
(J)V
(II)I
insert
(I[C)Ljava/lang/StringBuffer;
([C)Ljava/lang/StringBuffer;
getIndex
java/lang/String
regionMatches
(ILjava/lang/String;II)Z
setIndex
getBigInteger
(Z)Ljava/math/BigInteger;
bitLength
longValue
()J
getBigDecimalICU
(Z)Lcom/ibm/icu/math/BigDecimal;
(Lcom/ibm/icu/math/BigDecimal;I)Lcom/ibm/icu/math/BigDecimal;
(Ljava/lang/Number;Lcom/ibm/icu/util/Currency;)V
setErrorIndex
isParseStrict
(Lcom/ibm/icu/text/UnicodeSet;)V
(I)Lcom/ibm/icu/text/UnicodeSet;
removeAll
(Lcom/ibm/icu/text/UnicodeSet;)Lcom/ibm/icu/text/UnicodeSet;
charAt
(I)C
com/ibm/icu/lang/UCharacter
contains
isParseIntegerOnly
(II)Lcom/ibm/icu/text/UnicodeSet;
getLong
com/ibm/icu/text/UTF16
getCharCount
(I)I
com/ibm/icu/impl/UCharacterProperty
isRuleWhiteSpace
isUWhiteSpace
indexOf
substring
(II)Ljava/lang/String;
VALID_LOCALE
Type
InnerClasses
Lcom/ibm/icu/util/ULocale$Type;
getLocale
(Lcom/ibm/icu/util/ULocale$Type;)Lcom/ibm/icu/util/ULocale;
(Lcom/ibm/icu/util/ULocale;Ljava/lang/String;Ljava/text/ParsePosition;)Ljava/lang/String;
(Ljava/lang/String;)Lcom/ibm/icu/util/Currency;
getCurrency
getCurrencyCode
getPercent
getPerMill
()Ljava/util/Locale;
(Ljava/util/Locale;)V
getCurrencySymbol
getInternationalCurrencySymbol
(Ljava/util/Locale;)Lcom/ibm/icu/util/Currency;
toBigDecimal
ZERO
compareTo
(Lcom/ibm/icu/math/BigDecimal;)I
rint
abs
setLength
getULocale
getName
(Lcom/ibm/icu/util/ULocale;I[Z)Ljava/lang/String;
(C)Ljava/lang/String;
getDouble
()D
getDigit
getSignificantDigit
getPadEscape
movePointRight
(I)Lcom/ibm/icu/math/BigDecimal;
(IC)Ljava/lang/StringBuffer;
getPatternSeparator
setGroupingUsed
(JI)Lcom/ibm/icu/math/BigDecimal;
setLocale
(Lcom/ibm/icu/util/ULocale;Lcom/ibm/icu/util/ULocale;)V
doubleValue
ONE
setCurrencySymbol
setInternationalCurrencySymbol
getDefaultFractionDigits
java/io/ObjectOutputStream
defaultWriteObject
java/io/ObjectInputStream
defaultReadObject
freeze
addAll
com/ibm/icu/util/ULocale$Type
